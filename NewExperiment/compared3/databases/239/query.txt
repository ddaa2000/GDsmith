MATCH (n0 :L3)-[r0 :T3]->(n1 :L0)-[r1 :T0]->(n2 :L2) WHERE (((r0.k59) <> (n1.k2)) AND ((r0.id) <> (r1.id))) UNWIND [-1263825327] AS a0 WITH n0, a0, r1 OPTIONAL MATCH (n0 :L3)-[]->(n1)-[]->(n2) OPTIONAL MATCH (n3 :L1 :L3)-[r2 :T2]->(n1)-[r3 :T5]->(n4) WHERE (((r2.id) > -1) AND ((r2.id) <> (r3.id))) WITH n4, (r3.k70) AS a1, r1 ORDER BY (r1.k35), (r1.k37) DESC OPTIONAL MATCH (n5 :L2)-[r4 :T5]->(n6 :L0)-[r5 :T4]->(n7 :L3 :L5) WHERE ((n6.k4) AND ((r4.id) <> (r5.id))) OPTIONAL MATCH (n8)-[r6 :T5]->(n9)<-[r7 :T1]-(n10 :L2) WHERE (('qnfFW2o6' ENDS WITH (r7.k42)) AND ((r6.id) <> (r7.id))) OPTIONAL MATCH (n3)-[r8 :T3]->(n3) WHERE (1 >= (n7.k32)) RETURN DISTINCT min('2gp') AS a2, a1, (r8.k56) AS a3
MATCH (n0 :L4 :L5 :L3)-[r0 :T3]->(n1)<-[r1 :T1]-(n2 :L3), (n3 :L0)<-[r2 :T2]-(n4 :L1 :L3)-[r3 :T4]->(n5 :L3 :L0 :L5) WHERE ((((((((r0.id) > -1) AND ((r0.id) <> (r1.id))) AND ((r0.id) <> (r2.id))) AND ((r0.id) <> (r3.id))) AND ((r1.id) <> (r2.id))) AND ((r1.id) <> (r3.id))) AND ((r2.id) <> (r3.id))) MATCH (n5 :L0)<-[r4 :T3]-(n0 :L4 :L5), (n4)-[r5 :T3]->(n4 :L1) WHERE ((true OR (n3.k4)) AND ((r4.id) <> (r5.id))) MATCH (n3)<-[]-(n4 :L3)-[]->(n4 :L1) OPTIONAL MATCH (n3 :L0)<-[]-(n4 :L3)-[]->(n4 :L1) RETURN (n4.k7) AS a0, (r5.k53) AS a1
